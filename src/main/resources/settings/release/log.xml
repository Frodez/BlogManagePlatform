<?xml version="1.0" encoding="UTF-8"?>
<!--设置log4j2的自身log级别为warn -->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置， 当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j2能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<configuration status="warn" monitorInterval="30">
	<!-- #%m 输出代码中指定的消息 #%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL #%r 输出自应用启动到输出该log信息耗费的毫秒数 #%c 输出所属的类目，通常就是所在类的全名 
		#%t 输出产生该日志事件的线程名 #%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” #%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy 
		MM dd HH:mm:ss , SSS} #%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数 -->
	<!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符 -->
	<!--先定义所有的appender -->
	<appenders>
		<!--这个输出控制台的配置 -->
		<console name="Console" target="SYSTEM_OUT">
			<!--输出日志的格式 -->
			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss:SSS} %-5p %c:%L - %m%n" />
			<Filters>
				<ThresholdFilter level="DEBUG" onMatch="ACCEPT" onMismatch="DENY" />
				<ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY" />
				<ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY" />
				<ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL" />
			</Filters>
		</console>
		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用 -->
		<!-- <File name="log" fileName="D:/Code/eclipse/Logs/BlogManagePlatform/test.log" append="false"> <PatternLayout 
			pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/> </File> -->
		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size， 则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RollingFileInfo"
			fileName="D:/Code/Eclipse/Logs/BlogManagePlatform/info.log"
			filePattern="D:/Code/eclipse/Logs/BlogManagePlatform/history/info-%d{yyyy-MM-dd}-%i.log">
			<Filters>
				<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
				<ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY" />
				<ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL" />
			</Filters>
			<PatternLayout pattern="%d{HH:mm:ss:SSS} %-5p - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>

		<RollingFile name="RollingFileWarn"
			fileName="D:/Code/Eclipse/Logs/BlogManagePlatform/warn.log"
			filePattern="D:/Code/eclipse/Logs/BlogManagePlatform/history/warn-%d{yyyy-MM-dd}-%i.log">
			<Filters>
				<ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY" />
				<ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL" />
			</Filters>
			<PatternLayout pattern="%d{HH:mm:ss:SSS} %-5p - %l - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
			<DefaultRolloverStrategy max="30" />
		</RollingFile>

		<RollingFile name="RollingFileError"
			fileName="D:/Code/Eclipse/Logs/BlogManagePlatform/error.log"
			filePattern="D:/Code/eclipse/Logs/BlogManagePlatform/history/error-%d{yyyy-MM-dd}-%i.log">
			<ThresholdFilter level="ERROR" />
			<PatternLayout pattern="%d{HH:mm:ss:SSS} %-5p - %l - %m%n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>

	</appenders>
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<!--过滤掉spring和hibernate的一些无用的debug信息 -->
		<logger name="org.springframework" level="INFO">
		</logger>
		<logger name="com.zaxxer.hikari" level="INFO">
		</logger>
		<logger name="tk.mybatis" level="INFO">
		</logger>
		<logger name="io.undertow" level="INFO">
		</logger>
		<logger name="io.netty" level="INFO">
		</logger>
		<logger name="io.lettuce" level="INFO">
		</logger>
		<logger name="reactor" level="INFO">
		</logger>
		<logger name="org.hibernate" level="INFO">
		</logger>
		<logger name="springfox" level="ERROR">
		</logger>
		<logger name="org.apache.ibatis" level="INFO">
		</logger>
		<logger name="org.mybatis" level="INFO">
		</logger>
		<logger name="org.xnio" level="INFO">
		</logger>
		<logger name="frodez.dao.mapper" level="DEBUG">
		</logger>
		<logger name="frodez.config.security" level="WARN">
		</logger>
		<asyncRoot level="all" includeLocation="true">
			<!-- <appender-ref ref="Console" /> -->
			<appender-ref ref="RollingFileInfo" />
			<appender-ref ref="RollingFileWarn" />
			<appender-ref ref="RollingFileError" />
		</asyncRoot>
	</loggers>
</configuration>